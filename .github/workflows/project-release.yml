name: Release Affected Projects (Manual)

on:
  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: 'Select the project you want to release'
        required: true
        default: 'core'
        options:
          - core
          - utils
          - react
          - website
          - affected
      version-bump:
        type: choice
        description: 'Select the version bump to perform.'
        required: true
        default: 'patch'
        options:
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease

concurrency:
  group: release-project-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  validate-default-branch:
    name: Validate Default Branch
    runs-on: ubuntu-latest
    outputs:
      should-continue: ${{ steps.branch-check.outputs.should-continue }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Check if current branch is default
        id: branch-check
        uses: ./.github/actions/default-branch
        with:
          default-branch: ${{ github.event.repository.default_branch }}

  analyze-affected-libraries:
    name: Analyze Affected Libraries
    needs: validate-default-branch
    if: needs.validate-default-branch.outputs.should-continue == 'true'
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.detect.outputs.should-continue }}
      affected-libraries: ${{ steps.detect.outputs.affected-libraries }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node & pnpm environment
        uses: ./.github/actions/setup

      - name: Run Nx affected detection logic
        id: detect
        uses: ./.github/actions/detect-affected
        with:
          mode: ${{ inputs.project }}

  create-release-tag:
    name: Release & Tag Project â€“ ${{ inputs.project }}
    needs: analyze-affected-libraries
    if: needs.analyze-affected-libraries.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    outputs:
      develop-exists: ${{ steps.check_branch.outputs.exists }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          fetch-tags: true
        
      - name: Setup Node & pnpm environment
        uses: ./.github/actions/setup

      - name: Configure Git user and GPG signing
        uses: ./.github/actions/git-config
        with:
          gpgPrivId: ${{ secrets.GPG_PRIVATE_KEY }}
          gpgKeyId: ${{ secrets.GPG_KEY_ID }}

      - name: Execute custom Nx release script
        run: |
          pnpm run release \
            --specifier ${{ inputs.version-bump }} \
            --projects ${{ needs.analyze-affected-libraries.outputs.affected-libraries }} \
            --default-branch ${{ github.event.repository.default_branch }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        
      - name: Check if '${{ vars.DEV_BRANCH_NAME }}' branch exists
        id: check_branch
        run: |
          if git ls-remote --exit-code origin refs/heads/${{ vars.DEV_BRANCH_NAME }}; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
        
  create-sync-pr:
    name: Create Sync PR
    needs: create-release-tag
    if: needs.create-release-tag.outputs.develop-exists == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create sync branch
        run: |
          if git rev-parse --verify origin/${{ vars.SYNC_BRANCH_NAME }} >/dev/null 2>&1; then
            echo "::warning::Sync branch already exists. Skipping creation."
          else
            git fetch origin
            git checkout -b ${{ vars.SYNC_BRANCH_NAME }} origin/${{ vars.DEV_BRANCH_NAME }}
            git merge origin/${{ github.event.repository.default_branch }} --no-ff --no-commit || true
            git commit -m "chore(sync): merge ${{ github.event.repository.default_branch }} into ${{ vars.DEV_BRANCH_NAME }}" || echo "Nothing to commit"
            git push origin ${{ vars.SYNC_BRANCH_NAME }}
          fi
        
      - name: Create Pull Request with Sync Changes
        uses: ./.github/actions/create-pr
        with:
          token: ${{ secrets.GH_TOKEN }}
          branch: ${{ vars.SYNC_BRANCH_NAME }}
          base: ${{ vars.DEV_BRANCH_NAME }}
          title: 'chore(sync): add sync changes'
