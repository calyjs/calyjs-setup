name: Release Library Version (Manual)

on:
  workflow_dispatch:
    inputs:
      library:
        type: choice
        description: 'Select the library you want to release'
        required: true
        default: 'core'
        options:
          - core
          - utils
          - react
          - affected
      version-bump:
        type: choice
        description: 'Select the version bump to perform.'
        required: true
        default: 'patch'
        options:
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease

concurrency:
  group: release-lib-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  validate-default-branch:
    name: Validate Default Branch
    runs-on: ubuntu-latest
    outputs:
      should-continue: ${{ steps.branch-check.outputs.should-continue }}
    steps:
      - name: Check if current branch is default
        id: branch-check
        uses: ./.github/actions/default-branch
        with:
          default-branch: ${{ vars.DEFAULT_BRANCH_NAME }}

  analyze-affected-libraries:
    name: Analyze Affected Libraries
    needs: validate-default-branch
    if: needs.validate-default-branch.outputs.should-continue == 'true'
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.detect.outputs.should-release }}
      affected-libraries: ${{ steps.detect.outputs.affected-libraries }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node & pnpm environment
        uses: ./.github/actions/setup

      - name: Run Nx affected detection logic
        id: detect
        uses: ./.github/actions/detect-affected
        with:
          mode: ${{ inputs.library }}

  create-release-tag:
    name: Release & Tag Library â€“ ${{ inputs.library }}
    needs: analyze-affected-libraries
    if: needs.analyze-affected-libraries.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
        
      - name: Setup Node & pnpm environment
        uses: ./.github/actions/setup

      - name: Configure Git user and GPG signing
        uses: ./.github/actions/git-config
        with:
          gpgPrivId: ${{ secrets.GPG_PRIVATE_KEY }}
          gpgKeyId: ${{ secrets.GPG_KEY_ID }}

      - name: Execute custom Nx release script
        run: |
          pnpm run release \
            --specifier ${{ inputs.version-bump }} \
            --target-branch ${{ vars.RELEASE_BRANCH_NAME }} \
            --base-branch ${{ vars.DEFAULT_BRANCH_NAME }} \
            --projects ${{ needs.analyze-affected-libraries.outputs.affected-libraries }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create Pull Request with release version updates
        uses: ./.github/actions/create-pr
        with:
          token: ${{ secrets.GH_TOKEN }}
          branch: ${{ vars.RELEASE_BRANCH_NAME }}
          base: ${{ vars.DEFAULT_BRANCH_NAME }}
          title: 'chore(release): add release changes'
          body: 'This PR includes version bump and changelog updates.'
          commit-message: 'chore(release): add release changes'
