name: Create Pull Request via GitHub CLI
description: Create a pull request using the GitHub CLI (gh) in workflows

inputs:
  token:
    required: true
    description: GitHub token (typically secrets.GITHUB_TOKEN)

  branch:
    required: true
    description: The name of the branch to push and create the PR from

  base:
    required: true
    description: The base branch to merge into

  title:
    required: true
    description: The title of the pull request

  body:
    required: false
    default: ''
    description: The body of the pull request

  commit-message:
    required: true
    description: The commit message for the changes

runs:
  using: "composite"
  steps:
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
      shell: bash

    - name: Commit changes
      run: |
        git add .
        git commit -m "${{ inputs.commit-message }}" || echo "Nothing to commit"
      shell: bash

    - name: Create and push branch
      run: |
        git checkout -B ${{ inputs.branch }}
        git push origin ${{ inputs.branch }} --force
      shell: bash

    - name: Check if PR already exists
      id: pr-check
      run: |
        existing_pr=$(gh pr list \
          --head "${{ inputs.branch }}" \
          --base "${{ inputs.base }}" \
          --state open \
          --json number \
          --jq '.[0].number')

        if [[ -n "$existing_pr" ]]; then
          echo "PR already exists: #$existing_pr"
          echo "exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "No existing PR found."
          echo "exists=false" >> "$GITHUB_OUTPUT"
        fi
      env:
        GH_TOKEN: ${{ inputs.token }}
      shell: bash

    - name: Create Pull Request
      if: steps.pr-check.outputs.exists == 'false'
      run: |
        gh pr create \
          --title "${{ inputs.title }}" \
          --body "${{ inputs.body }}" \
          --base "${{ inputs.base }}" \
          --head "${{ inputs.branch }}" \
          --label "automated"
      env:
        GH_TOKEN: ${{ inputs.token }}
      shell: bash
